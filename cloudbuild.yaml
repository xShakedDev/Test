steps:
  # Build the client
  - name: 'node:18-alpine'
    args:
      - sh
      - -c
      - |
        cd client
        npm ci --only=production
        npm run build
    dir: 'client'
    id: 'build-client'

  # Build the server
  - name: 'node:18-alpine'
    args:
      - sh
      - -c
      - |
        npm ci --only=production
    dir: 'server'
    id: 'install-server-deps'

  # Copy built client to server
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - cp
      - client/build
      - server/public
    dir: 'server'
    id: 'copy-client-build'

  # Build the final Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - build
      - -t
      - 'gcr.io/$PROJECT_ID/gates-app:$COMMIT_SHA'
      - -t
      - 'gcr.io/$PROJECT_ID/gates-app:latest'
      - -f
      - Dockerfile
      - .
    id: 'build-image'

  # Push the image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - push
      - 'gcr.io/$PROJECT_ID/gates-app:$COMMIT_SHA'
    id: 'push-image'

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - push
      - 'gcr.io/$PROJECT_ID/gates-app:latest'
    id: 'push-latest'

# Build timeout
timeout: '1200s'

# Build options
options:
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: '100'
  logStreamingOption: 'STREAM_ON'

# Substitutions
substitutions:
  _REGION: 'us-central1'
  _SERVICE_NAME: 'gates-app'
