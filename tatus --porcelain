[1mdiff --git a/.dockerignore b/.dockerignore[m
[1mindex d914fb9..5a4b1bd 100644[m
[1m--- a/.dockerignore[m
[1m+++ b/.dockerignore[m
[36m@@ -1,23 +1,64 @@[m
[32m+[m[32m# Dependencies[m
 node_modules[m
[31m-npm-debug.log[m
[31m-.git[m
[31m-.gitignore[m
[31m-README.md[m
[32m+[m[32mnpm-debug.log*[m
[32m+[m[32myarn-debug.log*[m
[32m+[m[32myarn-error.log*[m
[32m+[m
[32m+[m[32m# Build outputs[m
[32m+[m[32mclient/build[m
[32m+[m[32mclient/dist[m
[32m+[m[32mbuild[m
[32m+[m[32mdist[m
[32m+[m
[32m+[m[32m# Environment files[m
 .env[m
 .env.local[m
 .env.development.local[m
 .env.test.local[m
 .env.production.local[m
[31m-.nyc_output[m
[31m-coverage[m
[31m-.DS_Store[m
[32m+[m
[32m+[m[32m# IDE files[m
 .vscode[m
 .idea[m
 *.swp[m
 *.swo[m
[31m-client/node_modules[m
[31m-client/build[m
[31m-client/coverage[m
[31m-client/.nyc_output[m
[31m-install.bat[m
[31m-start.bat[m
[32m+[m
[32m+[m[32m# OS files[m
[32m+[m[32m.DS_Store[m
[32m+[m[32mThumbs.db[m
[32m+[m
[32m+[m[32m# Git[m
[32m+[m[32m.git[m
[32m+[m[32m.gitignore[m
[32m+[m
[32m+[m[32m# Logs[m
[32m+[m[32mlogs[m
[32m+[m[32m*.log[m
[32m+[m
[32m+[m[32m# Runtime data[m
[32m+[m[32mpids[m
[32m+[m[32m*.pid[m
[32m+[m[32m*.seed[m
[32m+[m[32m*.pid.lock[m
[32m+[m
[32m+[m[32m# Coverage directory used by tools like istanbul[m
[32m+[m[32mcoverage[m
[32m+[m
[32m+[m[32m# Temporary folders[m
[32m+[m[32mtmp[m
[32m+[m[32mtemp[m
[32m+[m
[32m+[m[32m# Documentation[m
[32m+[m[32mREADME.md[m
[32m+[m[32mdocs[m
[32m+[m
[32m+[m[32m# Test files[m
[32m+[m[32mtest[m
[32m+[m[32mtests[m
[32m+[m[32m*.test.js[m
[32m+[m[32m*.spec.js[m
[32m+[m
[32m+[m[32m# Docker[m
[32m+[m[32mDockerfile[m
[32m+[m[32m.dockerignore[m
[32m+[m[32mdocker-compose.yml[m
[1mdiff --git a/Dockerfile b/Dockerfile[m
[1mindex 2d165bb..4960bf7 100644[m
[1m--- a/Dockerfile[m
[1m+++ b/Dockerfile[m
[36m@@ -1,52 +1,59 @@[m
 # Multi-stage build for React client + Node.js server[m
[31m-FROM node:18-alpine AS client-builder[m
[32m+[m[32mFROM node:18-alpine AS deps[m
[32m+[m
[32m+[m[32m# Install dependencies for faster builds[m
[32m+[m[32mRUN apk add --no-cache libc6-compat[m
 [m
 # Set working directory[m
[31m-WORKDIR /app/client[m
[32m+[m[32mWORKDIR /app[m
[32m+[m
[32m+[m[32m# Copy package files first for better caching[m
[32m+[m[32mCOPY package*.json ./[m
[32m+[m[32mCOPY client/package*.json ./client/[m
[32m+[m
[32m+[m[32m# Install all dependencies in parallel[m
[32m+[m[32mRUN npm ci --only=production && \[m
[32m+[m[32m    cd client && npm ci --only=production[m
[32m+[m
[32m+[m[32m# Client builder stage[m
[32m+[m[32mFROM node:18-alpine AS client-builder[m
 [m
[31m-# Copy client package files[m
[31m-COPY client/package*.json ./[m
[32m+[m[32mWORKDIR /app/client[m
 [m
[31m-# Install client dependencies[m
[31m-RUN npm ci --only=production[m
[32m+[m[32m# Copy dependencies from deps stage[m
[32m+[m[32mCOPY --from=deps /app/client/node_modules ./node_modules[m
 [m
[31m-# Copy client source code[m
[32m+[m[32m# Copy source code[m
 COPY client/ ./[m
 [m
[31m-# Build the React app[m
[32m+[m[32m# Build with optimizations[m
 RUN npm run build[m
 [m
 # Production stage[m
 FROM node:18-alpine AS production[m
 [m
[31m-# Create app directory[m
[31m-WORKDIR /app[m
[32m+[m[32m# Install only runtime dependencies[m
[32m+[m[32mRUN apk add --no-cache dumb-init[m
 [m
[31m-# Copy package files[m
[31m-COPY package*.json ./[m
[32m+[m[32mWORKDIR /app[m
 [m
[31m-# Install server dependencies only (postinstall will handle client later)[m
[31m-RUN npm ci --only=production --ignore-scripts[m
[32m+[m[32m# Copy dependencies from deps stage[m
[32m+[m[32mCOPY --from=deps /app/node_modules ./node_modules[m
 [m
[31m-# Copy source code[m
[32m+[m[32m# Copy server source[m
 COPY server/ ./server/[m
[31m-COPY client/ ./client/[m
[31m-[m
[31m-# Install client dependencies[m
[31m-RUN cd client && npm ci --only=production && cd ..[m
 [m
[31m-# Copy built client from builder stage[m
[32m+[m[32m# Copy built client[m
 COPY --from=client-builder /app/client/build ./public[m
 [m
 # Set production environment[m
 ENV NODE_ENV=production[m
 [m
 # Create non-root user[m
[31m-RUN addgroup -g 1001 -S nodejs[m
[31m-RUN adduser -S nodejs -u 1001[m
[32m+[m[32mRUN addgroup -g 1001 -S nodejs && \[m
[32m+[m[32m    adduser -S nodejs -u 1001 && \[m
[32m+[m[32m    chown -R nodejs:nodejs /app[m
 [m
[31m-# Change ownership of the app directory[m
[31m-RUN chown -R nodejs:nodejs /app[m
 USER nodejs[m
 [m
 # Expose port[m
[36m@@ -56,5 +63,5 @@[m [mEXPOSE 3001[m
 HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \[m
   CMD node -e "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })" || exit 1[m
 [m
[31m-# Start the application[m
[31m-CMD ["npm", "start"][m
[32m+[m[32m# Start with dumb-init for better signal handling[m
[32m+[m[32mCMD ["dumb-init", "npm", "start"][m
[1mdiff --git a/README.md b/README.md[m
[1mindex b01a6dc..dc8741b 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -1,108 +1,95 @@[m
 # Gate Control App[m
 [m
[31m-A modern gate control application that uses Twilio for phone verification and gate opening through phone calls.[m
[32m+[m[32mA simple web application for controlling gates via phone calls using Twilio.[m
 [m
 ## Features[m
 [m
[31m-- **Phone Number Verification**: Users must verify their phone number through Twilio before accessing the app[m
[31m-- **Gate Management**: Add, edit, and delete gates with custom names and phone numbers[m
[31m-- **Secure Access**: Only verified phone numbers can control gates[m
[31m-- **Phone Call Integration**: Open gates by making Twilio calls from verified numbers to gate numbers[m
[31m-- **Modern UI**: Clean, responsive React frontend with intuitive controls[m
[32m+[m[32m- 🚪 Control multiple gates remotely[m
[32m+[m[32m- 📞 Make phone calls to open gates[m
[32m+[m[32m- 👑 Admin panel for managing gates[m
[32m+[m[32m- 💰 View Twilio account balance[m
[32m+[m[32m- 🔒 Secure admin authentication[m
 [m
[31m-## Prerequisites[m
[32m+[m[32m## Quick Start[m
 [m
[31m-- Node.js (v16 or higher)[m
[31m-- Twilio account with:[m
[31m-  - Account SID[m
[31m-  - Auth Token[m
[31m-  - Verified phone number[m
[31m-- npm or yarn package manager[m
[32m+[m[32m### Prerequisites[m
 [m
[31m-## Installation[m
[32m+[m[32m- Node.js (v14 or higher)[m
[32m+[m[32m- Twilio account with credentials[m
[32m+[m[32m- Environment variables configured[m
 [m
[31m-1. Clone or download this repository[m
[31m-2. Install server dependencies:[m
[31m-   ```bash[m
[31m-   npm install[m
[31m-   ```[m
[32m+[m[32m### Installation[m
 [m
[31m-3. Install client dependencies:[m
[32m+[m[32m1. **Clone the repository**[m
    ```bash[m
[31m-   cd client[m
[31m-   npm install[m
[31m-   cd ..[m
[32m+[m[32m   git clone <repository-url>[m
[32m+[m[32m   cd Gates[m
    ```[m
 [m
[31m-4. Copy the environment file and configure your Twilio credentials:[m
[32m+[m[32m2. **Install dependencies**[m
    ```bash[m
[31m-   cp env.example .env[m
[32m+[m[32m   npm run install-all[m
    ```[m
[31m-   [m
[31m-   Edit `.env` and add your Twilio credentials:[m
[31m-   - `TWILIO_ACCOUNT_SID`: Your Twilio Account SID[m
[31m-   - `TWILIO_AUTH_TOKEN`: Your Twilio Auth Token[m
[31m-   - `TWILIO_PHONE_NUMBER`: Your verified Twilio phone number[m
[31m-[m
[31m-## Usage[m
 [m
[31m-### Development Mode[m
[31m-Run both server and client in development mode:[m
[31m-```bash[m
[31m-npm run dev[m
[31m-```[m
[31m-[m
[31m-### Production Mode[m
[31m-Build the client and start the server:[m
[31m-```bash[m
[31m-npm run build[m
[31m-npm start[m
[31m-```[m
[32m+[m[32m3. **Configure environment variables**[m
[32m+[m[32m   Create a `.env` file in the root directory:[m
[32m+[m[32m   ```env[m
[32m+[m[32m   ADMIN_PASSWORD=your-secret-password[m
[32m+[m[32m   TWILIO_ACCOUNT_SID=your-twilio-sid[m
[32m+[m[32m   TWILIO_AUTH_TOKEN=your-twilio-token[m
[32m+[m[32m   TWILIO_PHONE_NUMBER=your-twilio-number[m
[32m+[m[32m   ```[m
 [m
[31m-## How It Works[m
[32m+[m[32m4. **Start the application**[m
[32m+[m[32m   ```bash[m
[32m+[m[32m   npm run dev[m
[32m+[m[32m   ```[m
 [m
[31m-1. **Phone Verification**: Users enter their phone number and receive a verification call from Twilio[m
[31m-2. **Gate Management**: Verified users can add gates with names and phone numbers[m
[31m-3. **Gate Control**: Users can trigger gate opening by making Twilio calls from their verified number to the gate number[m
[32m+[m[32m   The app will be available at `http://localhost:3000`[m
 [m
[31m-## API Endpoints[m
[32m+[m[32m## Usage[m
 [m
[31m-- `POST /api/verify-phone` - Initiate phone verification[m
[31m-- `POST /api/verify-code` - Complete phone verification with code[m
[31m-- `GET /api/gates` - Get all gates for verified user[m
[31m-- `POST /api/gates` - Add new gate[m
[31m-- `PUT /api/gates/:id` - Update gate[m
[31m-- `DELETE /api/gates/:id` - Delete gate[m
[31m-- `POST /api/gates/:id/open` - Open specific gate[m
[32m+[m[32m### Opening Gates[m
[32m+[m[32m- Click the "Open Gate" button on any gate card[m
[32m+[m[32m- The system will make a phone call to the gate's phone number[m
 [m
[31m-## Security Features[m
[32m+[m[32m### Admin Functions[m
[32m+[m[32m- **Add Gate**: Create new gates with phone numbers[m
[32m+[m[32m- **Edit Gate**: Modify existing gate information[m
[32m+[m[32m- **Delete Gate**: Remove gates from the system[m
[32m+[m[32m- **View Balance**: Check Twilio account balance[m
 [m
[31m-- Phone number verification through Twilio[m
[31m-- Session-based authentication[m
[31m-- Authorized access control for gate management[m
[32m+[m[32m### Security[m
[32m+[m[32m- Admin password required for all management operations[m
[32m+[m[32m- Password is validated against the server[m
[32m+[m[32m- No persistent authentication - password required for each session[m
 [m
[31m-## File Structure[m
[32m+[m[32m## Project Structure[m
 [m
 ```[m
[31m-├── server/           # Backend Express server[m
[31m-│   ├── index.js     # Main server file[m
[31m-│   ├── routes/      # API route handlers[m
[31m-│   └── middleware/  # Custom middleware[m
[32m+[m[32mGates/[m
 ├── client/          # React frontend[m
[31m-│   ├── src/         # Source code[m
[31m-│   ├── public/      # Static assets[m
[31m-│   └── package.json # Frontend dependencies[m
[31m-├── package.json     # Backend dependencies[m
[31m-└── README.md        # This file[m
[32m+[m[32m├── server/          # Express backend[m
[32m+[m[32m├── data/            # Gate data storage[m
[32m+[m[32m└── package.json     # Dependencies and scripts[m
 ```[m
 [m
[31m-## Troubleshooting[m
[32m+[m[32m## API Endpoints[m
[32m+[m
[32m+[m[32m- `GET /api/gates` - Get all gates[m
[32m+[m[32m- `POST /api/gates/:id/open` - Open a gate[m
[32m+[m[32m- `POST /api/gates` - Create new gate (admin)[m
[32m+[m[32m- `PUT /api/gates/:id` - Update gate (admin)[m
[32m+[m[32m- `DELETE /api/gates/:id` - Delete gate (admin)[m
[32m+[m[32m- `GET /api/twilio/balance` - Get Twilio balance (admin)[m
[32m+[m
[32m+[m[32m## Technologies Used[m
 [m
[31m-- Ensure your Twilio credentials are correct in the `.env` file[m
[31m-- Check that your Twilio phone number is verified[m
[31m-- Verify that your Twilio account has sufficient credits for making calls[m
[31m-- Check the console for any error messages[m
[32m+[m[32m- **Frontend**: React, CSS3[m
[32m+[m[32m- **Backend**: Node.js, Express[m
[32m+[m[32m- **Communication**: Twilio API[m
[32m+[m[32m- **Storage**: JSON file system[m
 [m
 ## License[m
 [m
[31m-MIT License - feel free to use this project for your own purposes.[m
[32m+[m[32mMIT License[m
[1mdiff --git a/build-fast.bat b/build-fast.bat[m
[1mnew file mode 100644[m
[1mindex 0000000..596b410[m
[1m--- /dev/null[m
[1m+++ b/build-fast.bat[m
[36m@@ -0,0 +1,33 @@[m
[32m+[m[32m@echo off[m
[32m+[m[32mecho 🚀 Fast Build Script for Gates App[m
[32m+[m[32mecho ==================================[m
[32m+[m
[32m+[m[32mREM Set environment[m
[32m+[m[32mset NODE_ENV=production[m
[32m+[m
[32m+[m[32mREM Clean previous builds[m
[32m+[m[32mecho 🧹 Cleaning previous builds...[m
[32m+[m[32mif exist client\build rmdir /s /q client\build[m
[32m+[m[32mif exist server\public rmdir /s /q server\public[m
[32m+[m
[32m+[m[32mREM Install dependencies[m
[32m+[m[32mecho 📦 Installing dependencies...[m
[32m+[m[32mcd client && npm ci --only=production && cd ..[m
[32m+[m[32mcd server && npm ci --only=production && cd ..[m
[32m+[m
[32m+[m[32mREM Build React app[m
[32m+[m[32mecho ⚛️  Building React app...[m
[32m+[m[32mcd client && npm run build && cd ..[m
[32m+[m
[32m+[m[32mREM Copy build to server[m
[32m+[m[32mecho 📋 Copying build files...[m
[32m+[m[32mmkdir server\public[m
[32m+[m[32mxcopy client\build\* server\public\ /E /I /Y[m
[32m+[m
[32m+[m[32mREM Build Docker image[m
[32m+[m[32mecho 🐳 Building Docker image...[m
[32m+[m[32mdocker build -t gates-app:latest .[m
[32m+[m
[32m+[m[32mecho ✅ Build completed successfully![m
[32m+[m[32mecho 🚀 Run with: docker run -p 3001:3001 gates-app:latest[m
[32m+[m[32mpause[m
[1mdiff --git a/build-fast.sh b/build-fast.sh[m
[1mnew file mode 100644[m
[1mindex 0000000..e08e410[m
[1m--- /dev/null[m
[1m+++ b/build-fast.sh[m
[36m@@ -0,0 +1,33 @@[m
[32m+[m[32m#!/bin/bash[m
[32m+[m
[32m+[m[32mecho "🚀 Fast Build Script for Gates App"[m
[32m+[m[32mecho "=================================="[m
[32m+[m
[32m+[m[32m# Set environment[m
[32m+[m[32mexport NODE_ENV=production[m
[32m+[m
[32m+[m[32m# Clean previous builds[m
[32m+[m[32mecho "🧹 Cleaning previous builds..."[m
[32m+[m[32mrm -rf client/build server/public[m
[32m+[m
[32m+[m[32m# Install dependencies in parallel[m
[32m+[m[32mecho "📦 Installing dependencies..."[m
[32m+[m[32m(cd client && npm ci --only=production) &[m
[32m+[m[32m(cd server && npm ci --only=production) &[m
[32m+[m[32mwait[m
[32m+[m
[32m+[m[32m# Build React app[m
[32m+[m[32mecho "⚛️  Building React app..."[m
[32m+[m[32mcd client && npm run build && cd ..[m
[32m+[m
[32m+[m[32m# Copy build to server[m
[32m+[m[32mecho "📋 Copying build files..."[m
[32m+[m[32mmkdir -p server/public[m
[32m+[m[32mcp -r client/build/* server/public/[m
[32m+[m
[32m+[m[32m# Build Docker image[m
[32m+[m[32mecho "🐳 Building Docker image..."[m
[32m+[m[32mdocker build -t gates-app:latest .[m
[32m+[m
[32m+[m[32mecho "✅ Build completed successfully!"[m
[32m+[m[32mecho "🚀 Run with: docker run -p 3001:3001 gates-app:latest"[m
[1mdiff --git a/client/src/App.css b/client/src/App.css[m
[1mindex 40179be..fe76632 100644[m
[1m--- a/client/src/App.css[m
[1m+++ b/client/src/App.css[m
[36m@@ -19,82 +19,91 @@[m [mbody {[m
   min-height: 100vh;[m
 }[m
 [m
[31m-/* Header */[m
[31m-.app-header {[m
[31m-  background: rgba(255, 255, 255, 0.95);[m
[31m-  backdrop-filter: blur(10px);[m
[31m-  padding: 1rem 2rem;[m
[32m+[m[32m/* Dashboard Container */[m
[32m+[m[32m.dashboard-container {[m
[32m+[m[32m  max-width: 1200px;[m
[32m+[m[32m  margin: 0 auto;[m
[32m+[m[32m  padding: 2rem;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.dashboard-header {[m
   display: flex;[m
   justify-content: space-between;[m
[31m-  align-items: center;[m
[31m-  box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1);[m
[31m-  position: sticky;[m
[31m-  top: 0;[m
[31m-  z-index: 100;[m
[32m+[m[32m  align-items: flex-start;[m
[32m+[m[32m  margin-bottom: 2rem;[m
[32m+[m[32m  gap: 2rem;[m
 }[m
 [m
[31m-.app-header h1 {[m
[31m-  color: #333;[m
[31m-  font-size: 1.8rem;[m
[31m-  font-weight: 700;[m
[32m+[m[32m.dashboard-header h2 {[m
[32m+[m[32m  color: white;[m
[32m+[m[32m  font-size: 2.5rem;[m
[32m+[m[32m  margin-bottom: 0.5rem;[m
[32m+[m[32m  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);[m
 }[m
 [m
[31m-.user-info {[m
[31m-  display: flex;[m
[31m-  align-items: center;[m
[31m-  gap: 1rem;[m
[32m+[m[32m.dashboard-header p {[m
[32m+[m[32m  color: rgba(255, 255, 255, 0.9);[m
[32m+[m[32m  font-size: 1.1rem;[m
[32m+[m[32m  margin-bottom: 0.5rem;[m
 }[m
 [m
[31m-.user-info span {[m
[31m-  color: #666;[m
[31m-  font-weight: 500;[m
[32m+[m[32m.admin-notice {[m
[32m+[m[32m  color: #ffd700;[m
[32m+[m[32m  font-weight: 600;[m
[32m+[m[32m  font-size: 1rem;[m
 }[m
 [m
[31m-.logout-btn {[m
[31m-  background: #ff4757;[m
[31m-  color: white;[m
[31m-  border: none;[m
[31m-  padding: 0.5rem 1rem;[m
[31m-  border-radius: 8px;[m
[31m-  cursor: pointer;[m
[31m-  font-weight: 500;[m
[31m-  transition: background 0.3s ease;[m
[32m+[m[32m/* Admin Status */[m
[32m+[m[32m.admin-status-section {[m
[32m+[m[32m  margin-top: 1rem;[m
 }[m
 [m
[31m-.logout-btn:hover {[m
[31m-  background: #ff3742;[m
[32m+[m[32m.password-status {[m
[32m+[m[32m  color: #28a745;[m
[32m+[m[32m  font-weight: 600;[m
[32m+[m[32m  margin-bottom: 1rem;[m
[32m+[m[32m  font-size: 1.1rem;[m
 }[m
 [m
[31m-/* Main content */[m
[31m-.app-main {[m
[31m-  padding: 2rem;[m
[31m-  max-width: 1200px;[m
[31m-  margin: 0 auto;[m
[32m+[m[32m/* Twilio Balance */[m
[32m+[m[32m.twilio-balance {[m
[32m+[m[32m  margin-top: 1.5rem;[m
 }[m
 [m
[31m-/* Loading */[m
[31m-.loading-container {[m
[32m+[m[32m.balance-card {[m
   display: flex;[m
[31m-  flex-direction: column;[m
   align-items: center;[m
[31m-  justify-content: center;[m
[31m-  min-height: 60vh;[m
[31m-  color: white;[m
[32m+[m[32m  gap: 1rem;[m
[32m+[m[32m  padding: 1rem;[m
[32m+[m[32m  background: rgba(255, 255, 255, 0.15);[m
[32m+[m[32m  border-radius: 12px;[m
[32m+[m[32m  border: 1px solid rgba(255, 255, 255, 0.2);[m
 }[m
 [m
[31m-.loading-spinner {[m
[31m-  width: 50px;[m
[31m-  height: 50px;[m
[31m-  border: 4px solid rgba(255, 255, 255, 0.3);[m
[31m-  border-top: 4px solid white;[m
[31m-  border-radius: 50%;[m
[31m-  animation: spin 1s linear infinite;[m
[31m-  margin-bottom: 1rem;[m
[32m+[m[32m.balance-icon {[m
[32m+[m[32m  font-size: 2rem;[m
[32m+[m[32m  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));[m
[32m+[m[32m  flex-shrink: 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.balance-details {[m
[32m+[m[32m  display: flex;[m
[32m+[m[32m  flex-direction: column;[m
[32m+[m[32m  gap: 0.25rem;[m
[32m+[m[32m  flex: 1;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.balance-label {[m
[32m+[m[32m  color: rgba(255, 255, 255, 0.8);[m
[32m+[m[32m  font-size: 0.9rem;[m
[32m+[m[32m  font-weight: 500;[m
 }[m
 [m
[31m-@keyframes spin {[m
[31m-  0% { transform: rotate(0deg); }[m
[31m-  100% { transform: rotate(360deg); }[m
[32m+[m[32m.balance-amount {[m
[32m+[m[32m  color: white;[m
[32m+[m[32m  font-size: 1.5rem;[m
[32m+[m[32m  font-weight: 700;[m
[32m+[m[32m  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);[m
 }[m
 [m
 /* Buttons */[m
[36m@@ -131,15 +140,6 @@[m [mbody {[m
   background: #5a6268;[m
 }[m
 [m
[31m-.btn-success {[m
[31m-  background: #28a745;[m
[31m-  color: white;[m
[31m-}[m
[31m-[m
[31m-.btn-success:hover {[m
[31m-  background: #218838;[m
[31m-}[m
[31m-[m
 .btn-danger {[m
   background: #dc3545;[m
   color: white;[m
[36m@@ -149,17 +149,36 @@[m [mbody {[m
   background: #c82333;[m
 }[m
 [m
[31m-.btn-icon {[m
[32m+[m[32m.btn-